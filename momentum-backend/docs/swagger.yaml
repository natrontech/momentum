basePath: /
consumes:
    - application/json
definitions:
    ApiError:
        description: https://datatracker.ietf.org/doc/html/rfc7807
        x-go-package: momentum-core/models
    Application:
        x-go-package: momentum-core/models
    ApplicationCreateRequest:
        x-go-package: momentum-core/models
    Deployment:
        x-go-package: momentum-core/models
    DeploymentCreateRequest:
        x-go-package: momentum-core/models
    KeyValue:
        x-go-package: momentum-core/models
    KeyValueCreateRequest:
        x-go-package: momentum-core/models
    Repository:
        x-go-package: momentum-core/models
    RepositoryCreateRequest:
        x-go-package: momentum-core/models
    Stage:
        x-go-package: momentum-core/models
    StageCreateRequest:
        x-go-package: momentum-core/models
host: momentum.natron.io
info:
    description: Documentation of the momentum-core API.
    title: momentum-core-api.
    version: 1.0.0
paths:
    /application:
        post:
            description: adds repository
            operationId: add-app-routeid
            parameters:
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/applicationResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - application
    /deployment:
        post:
            description: adds deployment
            operationId: add-deployment-routeid
            parameters:
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/deploymentResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - deployment
    /repositories:
        get:
            description: read all repositories
            operationId: get-repos-routeid
            responses:
                "200":
                    $ref: '#/responses/stringArrayResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - repository
    /repository:
        post:
            description: adds repository
            operationId: add-repo-routeid
            parameters:
                - in: query
                  name: Body
            responses:
                "200":
                    $ref: '#/responses/repositoryResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - repository
    /repository/{repositoryName}:
        get:
            description: read a repository with defined repositoryName
            operationId: get-repo-routeid
            parameters:
                - description: name of the repository
                  in: path
                  name: repositoryName
                  required: true
                  type: string
            responses:
                "200":
                    $ref: '#/responses/repositoryResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - repository
    /repository/{repositoryName}/{applicationId}:
        get:
            description: read an application from defined repository repositoryName and applicationId
            operationId: get-app-routeid
            parameters:
                - description: name of the repository
                  in: path
                  name: repositoryName
                  required: true
                  type: string
                - description: id of the application
                  in: path
                  name: applicationId
                  required: true
                  type: string
            responses:
                "200":
                    $ref: '#/responses/applicationResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - repository
    /repository/{repositoryName}/app/stage/deployment/{deploymentId}:
        get:
            description: read a deployment from defined repository repositoryName and deploymentId
            operationId: get-deployment-routeid
            parameters:
                - description: name of the repository
                  in: path
                  name: repositoryName
                  required: true
                  type: string
                - description: id of the deployment
                  in: path
                  name: deploymentId
                  required: true
                  type: string
            responses:
                "200":
                    $ref: '#/responses/deploymentResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            tags:
                - repository
produces:
    - application/json
responses:
    applicationResponse:
        description: ""
    deploymentResponse:
        description: ""
    errorResponse:
        description: ""
    repositoryResponse:
        description: ""
        headers:
            id:
                type: string
            name:
                type: string
    stringArrayResponse:
        description: ""
        schema:
            items:
                type: string
            type: array
schemes:
    - http
securityDefinitions:
    basic:
        type: basic
swagger: "2.0"
