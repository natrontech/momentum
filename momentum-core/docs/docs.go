// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/beta/applications": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artefacts"
                ],
                "summary": "gets a list of all applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/artefacts.Artefact"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/artefact/{id}/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artefacts"
                ],
                "summary": "get an artefact by id (an artefact can be any of APPLICATION, STAGE or DEPLOYMENT)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "artefact id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/artefacts.Artefact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/deployments": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artefacts"
                ],
                "summary": "get a list of deployments for a given stage by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "stage id",
                        "name": "stageId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/artefacts.Artefact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/dir/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "gets the content of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.Dir"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/file/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "gets the content of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/file/{id}/line/{lineNumber}/overwrites": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "gets a list of child properties, which are overwritten by the given line.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "line number in file",
                        "name": "lineNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/files.Overwrite"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/file/{id}/line/{lineNumber}/overwritten-by": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "gets a list of properties which overwrite the given line.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "line number in file",
                        "name": "lineNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/files.Overwrite"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/api/beta/stages": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artefacts"
                ],
                "summary": "gets a list of all stages within an application or stage by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "application or stage id",
                        "name": "parentId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/artefacts.Artefact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/application": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "add an application",
                "parameters": [
                    {
                        "description": "Create Application",
                        "name": "applicationCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApplicationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/deployment": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "get a deployment of a repository by id",
                "parameters": [
                    {
                        "description": "Create Deployment",
                        "name": "deploymentCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeploymentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repositories": {
            "get": {
                "description": "load all repositories managed by this instance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "load repositories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Repository"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository": {
            "post": {
                "description": "adds a new repository to the instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "add a new repository",
                "parameters": [
                    {
                        "description": "Create Repository",
                        "name": "repositoryCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RepositoryCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Repository"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "get a repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Repository"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/app/stage/deployment/{deploymentId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "get a deployment of a repository by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/app/stage/{stageId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "get a stage of a repository by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Stage ID",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/application/values/{applicationId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "values"
                ],
                "summary": "get all values of an application by  the applications id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ValueWrapper"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/applications": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "get all applications of a repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Application"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/deployment/values/{deploymentId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "values"
                ],
                "summary": "get all values of a deployment by the deployments id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ValueWrapper"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/deployments": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "get deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Deployment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/stage/values/{stageId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "values"
                ],
                "summary": "get all values of an stage by  the stages id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Stage ID",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ValueWrapper"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/stages": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "get stages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/value/{valueId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "values"
                ],
                "summary": "get a value of a repository by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value ID",
                        "name": "valueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Value"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/repository/{repositoryName}/{applicationId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "get an application of a repository by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repositoryName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        },
        "/stage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "add a new stage",
                "parameters": [
                    {
                        "description": "Create Stage",
                        "name": "stageCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StageCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "artefacts.Artefact": {
            "type": "object",
            "properties": {
                "contentIds": {
                    "description": "id's of children artefacts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "description": "id's of parent",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/artefacts.ArtefactType"
                }
            }
        },
        "artefacts.ArtefactType": {
            "type": "integer",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32
            ],
            "x-enum-varnames": [
                "ROOT",
                "META",
                "APPLICATION",
                "STAGE",
                "DEPLOYMENT",
                "FILE"
            ]
        },
        "config.ApiError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "error": {},
                "instance": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "files.Dir": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.File"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "subDirs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.Dir"
                    }
                }
            }
        },
        "files.File": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "files.Overwrite": {
            "type": "object",
            "properties": {
                "originFileId": {
                    "type": "string"
                },
                "originFileLine": {
                    "type": "integer"
                },
                "originFilePath": {
                    "type": "string"
                },
                "overwriteFileId": {
                    "type": "string"
                },
                "overwriteFileLine": {
                    "type": "integer"
                },
                "overwriteFilePath": {
                    "type": "string"
                }
            }
        },
        "models.Application": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repositoryName": {
                    "type": "string"
                }
            }
        },
        "models.ApplicationCreateRequest": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reconcileInterval": {
                    "type": "string"
                },
                "repositoryName": {
                    "type": "string"
                }
            }
        },
        "models.Deployment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentStageId": {
                    "type": "string"
                },
                "repositoryId": {
                    "type": "string"
                }
            }
        },
        "models.DeploymentCreateRequest": {
            "type": "object",
            "properties": {
                "applicationName": {
                    "type": "string"
                },
                "chartVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentStageId": {
                    "type": "string"
                },
                "reconcileInterval": {
                    "type": "string"
                },
                "repositoryName": {
                    "type": "string"
                }
            }
        },
        "models.Repository": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RepositoryCreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Stage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentApplicationId": {
                    "type": "string"
                },
                "parentStageId": {
                    "type": "string"
                }
            }
        },
        "models.StageCreateRequest": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentApplicationId": {
                    "type": "string"
                },
                "parentStageId": {
                    "type": "string"
                },
                "reconcileInterval": {
                    "type": "string"
                },
                "repositoryName": {
                    "type": "string"
                }
            }
        },
        "models.Value": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "parentDeploymentId": {
                    "type": "string"
                },
                "parentStageId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ValueType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "REPOSITORY",
                "APPLICATION",
                "STAGE",
                "DEPLOYMENT"
            ]
        },
        "models.ValueWrapper": {
            "type": "object",
            "properties": {
                "parentFileId": {
                    "type": "string"
                },
                "parentFileName": {
                    "type": "string"
                },
                "valueType": {
                    "$ref": "#/definitions/models.ValueType"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Value"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "early-alpha",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Momentum Core API",
	Description:      "The momentum core api manages the core structure of momentum",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
